# -*- coding: utf-8 -*-
"""langgraph-first-graph.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H_4s81q5gQVcKGTYduZoPQ6qhbJC0FLV

#Requirements
"""

!pip install langchain==0.3.25 \
langgraph==0.4.8 \
langchain_openai==0.3.17 \
langgraph-checkpoint-sqlite==2.0.3 \
mypy-ipython==20.8.0 \
grandalf

"""#get OpenAI Key"""

import os
from getpass import getpass

os.environ["OPENAI_API_KEY"] = os.getenv("OPENAI_API_KEY") or getpass(
    "Enter OpenAI API Key: "
)

"""#Define State"""

from langgraph.graph import START, END, StateGraph
from typing_extensions import TypedDict
from langchain_openai.chat_models import ChatOpenAI
from langchain_core.messages import HumanMessage, BaseMessage
from langchain_core.runnables import Runnable
from collections.abc import Sequence

class State(TypedDict):
  messages: Sequence[BaseMessage]


state = State(messages=[HumanMessage(content="Hi, who wrote the novel 'The DaVinci Code' ? ")])
state["messages"][0].pretty_print()

"""#Define Nodes"""

chat = ChatOpenAI(model = 'gpt-4o-mini', max_completion_tokens=100)
response = chat.invoke(state["messages"])
response.pretty_print()

def chatbot(state: State) -> State:
  print("\n ----------> Entering Chatbot Node: \n")
  response = chat.invoke(state["messages"])
  response.pretty_print()
  return State(messages = [response])

chatbot(state)

"""#Defining Graph"""

graph = StateGraph(State)
graph.add_node("chatbot", chatbot)

graph.add_edge(START, "chatbot")
graph.add_edge("chatbot", END)

graph_compiled = graph.compile()

graph_compiled

"""#Testing the graph"""

graph_compiled.invoke(state)